
# This (trigger) has to happen, while condition(s) are true, to do stuff (action) #



  #############################################
  ####  Stäng av lampor kl 00.00 [Lights]  ####
  #############################################
- alias: Stäng av lamporna vid 00.00
  initial_state: 'on'
  trigger: 
    - platform: time
      at: "23:59:00"
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.livingroom
          state: 'off'
        - condition: state
          entity_id: media_player.livingroom
          state: 'unknown'
  action:
    - service: light.turn_off
      entity_id: light.vardagsrum__stativ
    - service: light.turn_off
      entity_id: light.vardagsrum__tak
    - service: light.turn_off
      entity_id: group.light_tvattstugan
    - service: light.turn_off
      entity_id: group.light_hallen
    - service: light.turn_off
      entity_id: group.light_kallaren
    - service: light.turn_off
      entity_id: light.fibaro_system_fgd212_dimmer_2_level
    - service: light.turn_off
      entity_id: light.vardagsrum__spotlights
    - service: light.turn_on
      entity_id: light.vardagsrum__trapp
    - service: light.turn_off
      entity_id: group.light_kitchen


  ##############################################
  ####  Tänd kl 06.00 på veckorna [Lights]  ####
  ##############################################   
- alias: Tänd lamporna vid 07.00
  initial_state: 'on'
  trigger: 
    - platform: time
      at: "06:00:00"
    - platform: state
      entity_id: sun.sun
      to: 'below_horizon'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.devices_adults
        state: 'home'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: time
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: light.turn_on
      entity_id: light.hall__1
    - service: light.turn_on
      entity_id: light.hall__2
    - service: light.turn_on
      entity_id: group.light_hallen
    - service: light.turn_on
      data:
        entity_id: light.vardagsrum__spotlights
        brightness: 30
#    - service: light.turn_on
#      data:
#        entity_id: light.fibaro_system_fgd212_dimmer_2_level
#        brightness: 30
      

  ##############################################
  ####  Tänd kl 08.00 på helgerna [Lights]  ####
  ##############################################
- alias: Tänd lamporna vid 08.00
  initial_state: 'on'
  trigger: 
    - platform: time
      at: "08:00:00"
    - platform: state
      entity_id: sun.sun
      to: 'below_horizon'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.devices_adults
        state: 'home'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: time
        weekday:
        - sat
        - sun
  action:
    - service: light.turn_on
      entity_id: light.vardagsrum__stativ
    - service: light.turn_on
      entity_id: light.vardagsrum__trapp
    - service: light.turn_on
      entity_id: group.light_hallen
    - service: light.turn_on
      data:
        entity_id: light.vardagsrum__spotlights
        brightness: 30
#    - service: light.turn_on
#      data:
#        entity_id: light.fibaro_system_fgd212_dimmer_2_level
#        brightness: 30
        
        
        
  ###########################################################
  ####  Tänd och släck vid rörelse köket[Lights]  ####
  ###########################################################
- alias: Tänd bänkbelysningen när rörelse
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.banksensor
    to: 'on'
  action:
    service: light.turn_on
    entity_id: light.koket__bank

- alias: Släck bänkbelysningen efter 10 min när sista rörelse
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.banksensor
    to: 'off'
    for:
      minutes: 4
  action:
    service: light.turn_off
    entity_id: light.koket__bank  
    
################################       
######## BADRUMSSENSOR #########
################################
- alias: Tänd bänkbelysningen vid rörelse
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.badrumssensor
    to: 'on'
  action:
    service: light.turn_on
    entity_id:
    - light.badrumslampa_1
    - light.badrumslampa_2

- alias: Släck bänkbelysningen efter 7 min vid sista rörelse
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.badrumssensor
    to: 'off'
    for:
      minutes: 7
  action:
    service: light.turn_off
    entity_id:
    - light.badrumslampa_1
    - light.badrumslampa_2
##############################   
######## ALTANSENSOR #########
##############################

- alias: Tänd bänkbelysningen vid rörelse
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.altan_motion_sensor
    to: 'on'
  action:
    service: light.turn_on
    entity_id:
    - light.altan_lampa

- alias: Släck bänkbelysningen efter 7 min vid sista rörelse
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.altan_motion_sensor
    to: 'off'
    for:
      minutes: 7
  action:
    service: light.turn_off
    entity_id:
    - light.altan_lampa

  ###########################################################
  ####  Tänd och släck vid rörelse tvättstugan [Lights]  ####
  ###########################################################
- alias: Tänd tvättstuge lamporna när rörelse
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.tvattstugan_motion_sensor
    to: 'on'
  action:
    service: light.turn_on
    entity_id: group.light_tvattstugan

- alias: Släck tvättstuge lamporna efter 10 min när sista rörelse
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.tvattstugan_motion_sensor
    to: 'off'
    for:
      minutes: 4
  action:
    service: light.turn_off
    entity_id: group.light_tvattstugan

    

  ##########################################################
  ####  Tänd och släck vid rörelse skafferiet [Lights]  ####
  ##########################################################
- alias: Tänd skafferiet lampan när rörelse i skafferiet
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.skafferiet_motion_sensor
    to: 'on'
  action:
    service: light.turn_on
    entity_id: light.skafferiet

- alias: Släck skafferiet lampan efter 2 min när sista rörelse i skafferiet
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.skafferiet_motion_sensor
    to: 'off'
    for:
      minutes: 2
  action:
    service: light.turn_off
    entity_id: light.skafferiet
    
  ########################################################
  ####  Tänd och släck vid rörelse källaren [Lights]  ####
  ########################################################
- alias: Tänd källare lamporna när rörelse i källaren
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.kallaren_motion_sensor
    to: 'on'
  action:
    service: light.turn_on
    entity_id: group.light_kallaren

- alias: Släck källare lamporna efter 2 min när sista rörelse i källaren
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.trapp_motion_sensor
    to: 'off'
  condition:
    condition: state
    entity_id: binary_sensor.kallaren_motion_sensor
    state: 'off'
  action:
    service: light.turn_off
    entity_id: group.light_kallaren

   
  ########################################
  ####  Automation Radio vol [Media]  ####
  ########################################
- alias: 'Set Radio Volume'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_number.volume_radio
  action:
    service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state("input_select.chromecast_radio", "Entre") %} media_player.entre_speaker
        {% elif is_state("input_select.chromecast_radio", "Vardagsrum") %} media_player.livingroom_speaker
        {% elif is_state("input_select.chromecast_radio", "Köket") %} media_player.kitchen_speaker
        {% elif is_state("input_select.chromecast_radio", "Alla") %} media_player.hela_huset
        {% endif %}
      volume_level: '{{  states.input_number.volume_radio.state  }}'
      
      
      
  #######################################
  ####  System Automationer [Notify] ####
  #######################################
- alias: 'Hass Started'
  initial_state: 'on'
  trigger:
    platform: homeassistant
    # Event can also be 'shutdown'
    event: start
  action:
    - service: notify.telegram_oskar
      data:
        title: 'Home Assistant'
        message: 'Online'
 
- alias: 'Hass Ready'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: zwave.network_ready
  action:
    - service: notify.telegram_oskar
      data:
        title: 'Home Assistant'
        message: 'Z-wave network är ready'
 
- alias: 'Hass Stopped'
  initial_state: 'on'
  trigger:
    platform: homeassistant
    # Event can also be 'shutdown'
    event: shutdown
  action:
    - service: notify.telegram_oskar
      data:
        title: 'Home Assistant'
        message: 'Offline'
 
- alias: New Device Tracked
  initial_state: 'off'
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    - service: notify.telegram_oskar
      data_template:
        message: >
          New device:
          {{trigger.event.data.host_name}} 
          ({{trigger.event.data.entity_id}})
        title: 'New device Detected'
 
- alias: Hass Updater
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    - service: notify.telegram_oskar
      data_template: 
        title: 'Ny Home Assistant version ute!'
        message: "Home Assistant  {{ states.updater.updater.state }}  är nu tillgänlig."

- alias: 'Norrsken nära'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.norrsken
    from: 'off'
    to: 'on'
  action:
    - service: notify.adults
      data:
        title: 'Home Assistant'
        message: 'Kolla ut, du kan se norrsken om 30 minuter!'        
        

  ######################################
  ####  Radio på helgerna [TTS]     ####
  ######################################     
- alias: Radio helgerna
  initial_state: 'off'
  trigger: 
    - platform: time
      at: "09:45:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.devices_adults
        state: 'home'
      - condition: time
        weekday:
        - sat
        - sun
  action:
    - delay: '00:00:30'
    - service: media_player.volume_set
      entity_id:
      - media_player.entre_speaker
      - media_player.kitchen_speaker
      data:
        volume_level: 0.15
    - service: media_player.play_media
      data:
        entity_id:
          - media_player.entre_speaker
          - media_player.kitchen_speaker
        media_content_id: !secret content_silence_mp3
        media_content_type: music
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data:
       message: Godmorgon, hoppas ni får en fin dag.
    - delay: '00:00:05'       
    - service: script.radio_p3
      entity_id: script.radio_p3
      
      
  ######################################
  ####  Radio på veckodagarna [TTS] ####
  ######################################     
- alias: Radio weekdays
  initial_state: 'off'
  trigger: 
    - platform: time
      at: "06:00:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.devices_adults
        state: 'home'
      - condition: time
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - delay: '00:00:30'
    - service: media_player.volume_set
      entity_id:
      - media_player.entre_speaker
      - media_player.kitchen_speaker
      data:
        volume_level: 0.15
    - service: media_player.play_media
      data:
        entity_id:
          - media_player.entre_speaker
          - media_player.kitchen_speaker
        media_content_id: !secret content_silence_mp3
        media_content_type: music
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data:
       message: Godmorgon, hoppas ni får en trevlig dag.
    - delay: '00:00:05'       
    - service: script.radio_p3
      entity_id: script.radio_p3



 
  ##########################
  ####  Julläge [LÄGE]  ####
  ########################## 
#- alias: Jul_mode
#  id: '123456789103'
#  initial_state: 'off'
#  trigger: 
#    platform: state
#    entity_id: device_tracker.esp_633124
#    to: home
#  action:
#    - service: light.turn_off
#      entity_id: group.light_vardagsrum
#    - service: light.turn_on
#      entity_id: group.light_hallen
#    - service: automation.turn_off
#      entity_id: automation.media_player_playing
#    - service: automation.turn_off
#      entity_id: automation.media_player_pausedstopped 
      
      
      
  ##############################################
  ####  SCRIPT HOME/AWAY/JUL [LÄGE/SCRIPT]  ####
  ############################################## 
- alias: Hemmaläge input
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.modes
    to: 'Hemmaläge'
  action:
    - service: script.turn_on
      entity_id: script.home_mode

- alias: Bortaläge input
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.modes
    to: 'Bortaläge'
  action:
    - service: script.turn_on
      entity_id: script.away_mode

      
- alias: Gästeläge input
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.modes
    to: 'Gästläge'
  action:
    - service: script.turn_on
      entity_id: script.gast_mode
      

- alias: Julläge input
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.modes
    to: 'Julläge'
  action:
    - service: script.turn_on
      entity_id: script.jul_mode

##############################
#####REST Christmas light#####
##############################
##SÄTT PÅ NÄR DET ÄR JUL!!!
# Pattern

- alias: p_colorwaves
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Color Waves"
  action:
    - service: rest_command.pattern_colorwaves  
     
- alias: p_palettetest
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Palette Test"
  action:
    - service: rest_command.pattern_palettetest
   
- alias: p_pride
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Pride"
  action:
    - service: rest_command.pattern_pride   
   
- alias: p_rainbow
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Rainbow"
  action:
    - service: rest_command.pattern_rainbow    
   
- alias: p_rainbowglitter
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Rainbow Glitter"
  action:
    - service: rest_command.pattern_rainbowglitter 
   
- alias: p_snowglitter
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Snow Glitter"
  action:
    - service: rest_command.pattern_snowglitter   
   
- alias: p_confetti
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Confetti"
  action:
    - service: rest_command.pattern_confetti   
   
- alias: p_sinelon
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Sinelon"
  action:
    - service: rest_command.pattern_sinelon  
   
- alias: p_juggle
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Juggle"
  action:
    - service: rest_command.pattern_juggle    
   
- alias: p_bpm
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "BPM"
  action:
    - service: rest_command.pattern_bpm 
   
- alias: p_solid
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_pattern
    to: "Solid"
  action:
    - service: rest_command.color_picker_standardlight
   
        
    
 #  Palette

- alias: p_colorwaves
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_palette
    to: "Rainbow"
  action:
    - service: rest_command.palette_rainbow 
     
- alias: p_palettetest
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_palette
    to: "Rainbow Stripe"
  action:
    - service: rest_command.palette_rainbowstripe
   
- alias: p_cloud
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_palette
    to: "Cloud"
  action:
    - service: rest_command.palette_pride   
   
- alias: p_lava
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_palette
    to: "Lava"
  action:
    - service: rest_command.palette_lava    
   
- alias: p_ocean
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_palette
    to: "Ocean"
  action:
    - service: rest_command.palette_ocean 
   
- alias: p_forest
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_palette
    to: "Forest"
  action:
    - service: rest_command.palette_forest   
   
- alias: p_party
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_palette
    to: "Party"
  action:
    - service: rest_command.palette_party   
   
- alias: p_heat
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.christmas_palette
    to: "Heat"
  action:
    - service: rest_command.palette_heat   
   
   
######################    
### JULBELSYGNING ####    
######################


- alias: Slå på julbelysning ute 
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "-00:45:00"
  action:
    service: switch.turn_on
    entity_id: switch.rest_julbelysning
    
- alias: Slå av julbelysning ute
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunrise
    offset: "+00:00:00"
  action:
    service: switch.turn_off
    entity_id: switch.rest_julbelysning  
    
    

################   
####SPARSNÄS####
################
#- alias: "Sparsnäs månatig förbrukning"
#  initial_state: 'on'
#  trigger:
#    - platform: time
#      at: '00:00:01'
#  condition:
#    condition: and
#    conditions:
#      - condition: template
#        value_template: '{{ now().day() | string == "1" }}'
#      - condition: or
#        conditions:
#          - condition: template
#            value_template: '{{ now().month() | string == "1" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "2" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "3" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "4" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "5" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "6" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "7" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "8" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "9" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "10" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "11" }}'
#          - condition: template
#            value_template: '{{ now().month() | string == "12" }}'
#  action:
#    service: mqtt.publish
#    data:
#      topic: 'template/kwh/month'
#      payload_template: "{{ states('sensor.energiforbrukning_over_tid') }}"
#      retain: 'true'
    
#- alias: "Sparsnäs daglig förbrukning"
#  initial_state: 'on'
#  trigger:
#    platform: time
#    at: '00:00:01'
#  action:
#    service: mqtt.publish
#    data:
#      topic: 'template/kwh/day'
#      payload_template: "{{ states('sensor.energiforbrukning_over_tid') }}"
#      retain: 'true'

#######################################################################
##  Announce when people come or go.                                 ##
## Announce over all Chromecast Audios                               ##
#######################################################################
- alias: People Greeting
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - device_tracker.oneplus_6
        - group.devices_bella
      from: 'not_home'
      to: 'home'
      for: '00:02:00'
  condition:
    condition: time
    after: '07:00:00'
    before: '19:00:00'
  action:
    - service: script.speech_engine
      data_template:
        personarriving: >-
         {%- if trigger.entity_id == 'group.devices_bella' -%}
           {%- set person = "Bella" -%}
         {%- elif trigger.entity_id == 'device_tracker.oneplus_6' -%}
           {%- set person = "Oskar" -%}
         {%- else -%}
           {%- set person = "Alla" -%}
         {%- endif -%}
          {%- macro greeting_sentence(person) -%}
            {{ [
               "Välkommen hem " ~ person,
               "Gissa vem som kommit hem?" ~ person +" har!",
               person + " är nu hemma.",
               "Välkommen hem " ~ person + ".  Vi har saknat dig, eller åtminstone jag, Milla!",
               "I världen är du bara någon men för någon är du hela världen! Välkommen hem! " ~ person,
               "Hej där " ~ person + " Välkommen hem!",
               "Knack Knack. Vem där? "   ~ person +" är!",
               person ~ "! Du är hemma!",
               "Jag vet en hemlighet! "  ~ person +" är hemma!",
               "Hej "  ~ person +" du har blivit hittad av det smartaste huset på gatan!",
               person + " är nu här.  Hash tag Välkommen hem.",
               person + " är nu här.  Hash tag Hemma.",
               person + " är nu här.  Hash tag Smart hem.",
               person + " är nu här.  Välkommen till Kernehed Manison, mi casa su casa."
            ] | random }}
          {%- endmacro -%}
          {{- greeting_sentence(person) -}}

          
          
#######################################################################
##  Välkommen hem till oss "person"                                  ##
## Announce over all Chromecast Audios                               ##
#######################################################################
- alias: People Greeting 2
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - device_tracker.annasiphone
        - device_tracker.iphone_2
        - device_tracker.andreassiphone
      from: 'not_home'
      to: 'home'
      for: '00:02:00'
  condition:
    condition: time
    after: '07:00:00'
    before: '19:00:00'
  action:
    - service: script.speech_engine_2
      data_template:
        personarriving: >-
         {%- if trigger.entity_id == 'device_tracker.iphone_2' -%}
           {%- set person = "Ingela" -%}
         {%- elif trigger.entity_id == 'device_tracker.annasiphone' -%}
           {%- set person = "Anna" -%}
         {%- elif trigger.entity_id == 'device_tracker.andreassiphone' -%}
           {%- set person = "Andreas" -%}
         {%- else -%}
           {%- set person = "Alla" -%}
         {%- endif -%}
          {%- macro greeting_sentence(person) -%}
            {{ [
               "Välkommen hem till oss" ~ person,
               "Gissa vem som kommit hit?" ~ person +" har!",
               "Men se här vad katten har släpat in?" ~ person +" är här!",
               person + " är nu hos familjen Kernehed.",
               "Välkommen hem till oss " ~ person + ".  Vi har saknat dig, eller åtminstone jag, Milla!",
               "Hos oss kan du känna dig som hemma, välkommen hit " ~ person,
               "Hej där " ~ person + " Välkommen till vårat hem!",
               "Knack Knack. Vem där? "   ~ person +" är!",
               person ~ "! Välkommen hem till oss",
               "Jag vet en hemlighet! "  ~ person +" är här!",
               "Hej "  ~ person +" du har blivit hittad av det smartaste huset på gatan!",
               person + " är nu här.  Hash tag Välkommen hem.",
               person + " är nu här.  Hash tag Hemma.",
               person + " är nu här.  Hash tag Smart hem.",
               person + " är nu här.  Välkommen till Kernehed Mansion, mi casa su casa."
            ] | random }}
          {%- endmacro -%}
          {{- greeting_sentence(person) -}}          

###############################
### FÖDELSEDAGAR AUTOMATION ###
###############################
- alias: Evenice fodelsedag
  initial_state: 'on'
  trigger: 
    - platform: time_pattern
      hours : '/3'
      minutes: 00
      seconds: 00
  condition:
    condition: and
    conditions:
      - condition: time
        after: '07:00:00'
        before: '22:00:00'
      - condition: template
        value_template: '{{ now().strftime("%d") | int == 5 and now().strftime("%m") | int == 1 }}'
  action:
#    - delay: '00:00:05'
    - service: script.turn_on
      entity_id: script.evenice_fodelsedag
      
      
- alias: Isabelles fodelsedag
  initial_state: 'on'
  trigger: 
    - platform: time_pattern
      hours : '/3'
      minutes: 00
      seconds: 00
  condition:
    condition: and
    conditions:
      - condition: time
        after: '07:00:00'
        before: '22:00:00'
      - condition: template
        value_template: '{{ now().strftime("%d") | int == 11 and now().strftime("%m") | int == 2 }}'
  action:
#    - delay: '00:00:05'
    - service: script.turn_on
      entity_id: script.isabelles_fodelsedag
      

- alias: Oskars fodelsedag
  initial_state: 'on'
  trigger: 
    - platform: time_pattern
      hours : '/3'
      minutes: 00
      seconds: 00
  condition:
    condition: and
    conditions:
      - condition: time
        after: '07:00:00'
        before: '22:00:00'
      - condition: template
        value_template: '{{ now().strftime("%d") | int == 11 and now().strftime("%m") | int == 6 }}'
  action:
#    - delay: '00:00:05'
    - service: script.turn_on
      entity_id: script.oskars_fodelsedag
      
      
- alias: Theus fodelsedag
  initial_state: 'on'
  trigger: 
    - platform: time_pattern
      hours : '/3'
      minutes: 00
      seconds: 00
  condition:
    condition: and
    conditions:
      - condition: time
        after: '07:00:00'
        before: '22:00:00'
      - condition: template
        value_template: '{{ now().strftime("%d") | int == 2 and now().strftime("%m") | int == 9 }}'
  action:
#    - delay: '00:00:05'
    - service: script.turn_on
      entity_id: script.theus_fodelsedag
 
 
##################################      
####  LÅS UPPLÅST ELLER LÅST  ####
##################################

# - alias: 'Låset är upplåst'
  # initial_state: 'on'
  # trigger:
    # platform: state
    # entity_id: lock.polycontrol_danalock_v3_btze_locked
    # from: 'locked'
    # to: 'unlocked'
  # condition:
    # condition: state
    # entity_id: group.devices_adults
    # state: not_home
  # action:
    # - service: notify.telegram
      # data:
        # title: 'Home Assistant'
        # message: 'Någon har låst upp låset, kolla vem!!' 

# - alias: 'Låset är låst'
  # initial_state: 'on'
  # trigger:
    # platform: state
    # entity_id: lock.polycontrol_danalock_v3_btze_locked
    # from: 'unlocked'
    # to: 'locked'
  # condition:
    # condition: state
    # entity_id: group.devices_adults
    # state: not_home    
  # action:
    # - service: notify.telegram
      # data:
        # title: 'Home Assistant'
        # message: 'Någon har låst, skönt!!!' 
        
#####################################        
#### LÅS OCH LÅS UPP VID ANKOMST ####
#####################################

#- alias: 'Lås låset'
#  initial_state: 'on'
#  trigger:
#    platform: state
#    entity_id: 
#    - group.devices_adults
#    from: 'home'
#    to: 'not_home'
#  action:
#    - service: lock.lock
#      entity_id: lock.polycontrol_danalock_v3_btze_locked
#    - service: notify.adults
#      data:
#        title: 'Home Assistant'
#        message: 'Nu är det låst!!!'
        
        
- alias: 'Lås upp låset'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
    - group.devices_adults
    from: 'not_home'
    to: 'home'
  action:
    - service: lock.unlock
      entity_id: lock.polycontrol_danalock_v3_btze_locked
    - service: notify.adults
      data:
        title: 'Home Assistant'
        message: 'Nu är det upplåst!!!'
        
        
- alias: 'Lås låset kl 21.00'
  initial_state: 'on'
  trigger:
    - platform: time
      at: "21:00:00"
  action:
    - service: lock.lock
      entity_id: lock.polycontrol_danalock_v3_btze_locked
    - service: notify.adults
      data:
        title: 'Home Assistant'
        message: 'Nu är klockan 21.00 nu är det låst!!!'
        

#########################
#### Natt/Start Tema ####
######################### 
  
- alias: 'Set startup theme'
  initial_state: 'on'
  trigger:
    - platform: time
      at: '08:00'
  action:
    - service: frontend.set_theme
      data:
        name: slate

######################        
#### Otillgänglig ####        
######################       
- alias: 'light unavailable'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - light.hall__1
    - light.hall__2
    - light.kallarspot_1
    - light.kallarspot_2
    - light.kallarspot_3
    - light.kallarspot_4
    - light.kallarspot_5
    - light.kallarspot_6
    - light.skafferiet
    - light.sovrummet_1
    - light.sovrummet_2
    - light.tvattstugan__1
    - light.tvattstugan__2
    - light.vardagsrum__stativ
    - light.vardagsrum__tak
    - light.vardagsrum__trapp
    - light.theus_lampa
    - light.evenice_lampa
    - light.badrumslampa_1
    - light.badrumslampa_2
    - light.altan_lampa
    to: unavailable
  action:
    - service: notify.adults
      data_template:
        title: 'Home Assistant'
        message: >
          {% if trigger.to_state.state | lower == "unavailable" %}
             {{ trigger.to_state.attributes.friendly_name }} är nu avstängd eller sönder, kolla!!
          {% else %}
             {{ trigger.to_state.attributes.friendly_name }} Detta gör ingenting men står här ändå
          {% endif %}
          
          
          
          
#AUTOMATION Test
# - alias: Sparsnäs monthly consumption
  # initial_state: 'on'
  # trigger:
    # platform: time
    # at: '00:00:01'
  # condition:
    # condition: and
    # conditions:
      # - condition: template
        # value_template: '{{ now().day | string == "1" }}'
      # - condition: or
        # conditions:
          # - condition: template
            # value_template: '{{ now().month | string == "1" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "2" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "3" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "4" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "5" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "6" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "7" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "8" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "9" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "10" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "11" }}'
          # - condition: template
            # value_template: '{{ now().month | string == "12" }}'
  # action:
  # - data:
      # payload_template: '{{ states(''sensor.energiforbrukning_over_tid'') }}'
      # retain: 'true'
      # topic: template/kwh/month
    # service: mqtt.publish

# - alias: Sparsnäs daily consumption
  # initial_state: 'on'
  # trigger:
  # - at: 00:00:02
    # platform: time
  # action:
  # - data:
      # payload_template: "{{ states('sensor.energiforbrukning_over_tid')}}"
      # retain: 'true'
      # topic: template/kwh/day
    # service: mqtt.publish

# - alias: trigger-sparsnas-if-unknown
  # trigger:
  # - entity_id: sensor.energiforbrukning_over_tid
    # from: unknown
    # platform: state
  # condition:
  # - condition: state
    # entity_id: sensor.sparsnas_template_kwh_sensor_month
    # state: unknown
  # action:
  # - data:
      # entity_id: automation.sparsnas_daily_consumption
    # service: automation.trigger
  # - data:
      # entity_id: automation.sparsnas_monthly_consumption
    # service: automation.trigger
    
    
## KAMERA ##
- alias: Kamera motion
  id: kamera_motion
  initial_state: 'on'
  trigger: 
    - platform: state
      entity_id: binary_sensor.unifi_camera
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: group.devices_adults
        state: 'not_home'
      - condition: time
        before: "05:00:00"
        after: "00:15:00"
  action:
    - service: script.turn_on
      entity_id: script.entre_camera_snapshot #Snapshot 1
    - delay: '00:00:02'
    - service: script.turn_on
      entity_id: script.entre_camera_snapshot #Snapshot 2
    - delay: '00:00:02'
    - service: script.turn_on
      entity_id: script.entre_camera_snapshot #Snapshot 3
    - delay: '00:00:02'
    - service: script.turn_on
      entity_id: script.entre_camera_snapshot #Snapshot 4
    - delay: '00:00:02'
    - service: script.turn_on
      entity_id: script.entre_camera_snapshot #Snapshot 5
      
      
## MATSEDEL TTS

- alias: 'tts lillhagsskolan mat'
  initial_state: 'on'
  trigger:
    - platform: time
      at: '06:48'
  action:
    - service: media_player.volume_set
      entity_id: media_player.entre_speaker
      data:
        volume_level: 0.2
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data_template:
        message: >-
          "På skolan idag får Evenice äta"
          {% if now().weekday() == 0 %}
            {{ states('sensor.lillhagsskolan_lunch_mandag') }}
          {% elif now().weekday() == 1 %}
            {{ states('sensor.lillhagsskolan_lunch_tisdag') }}
          {% elif now().weekday() == 2 %}
            {{ states('sensor.lillhagsskolan_lunch_onsdag') }}
          {% elif now().weekday() == 3 %}
            {{ states('sensor.lillhagsskolan_lunch_torsdag') }}
          {% elif now().weekday() == 4 %}
            {{ states('sensor.lillhagsskolan_lunch_fredag') }}  
          {% endif %}
        cache: false

- alias: 'tts storhagensförskola mat'
  initial_state: 'on'
  trigger:
    - platform: time
      at: '06:45'
  action:
    - service: media_player.volume_set
      entity_id: media_player.entre_speaker
      data:
        volume_level: 0.2
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data_template:
        message: >-
          "På förskolan idag får Theus äta"
          {% if now().weekday() == 0 %}
            {{ states('sensor.storhagensforskola_lunch_mandag') }}
          {% elif now().weekday() == 1 %}
            {{ states('sensor.storhagensforskola_lunch_tisdag') }}
          {% elif now().weekday() == 2 %}
            {{ states('sensor.storhagensforskola_lunch_onsdag') }}
          {% elif now().weekday() == 3 %}
            {{ states('sensor.storhagensforskola_lunch_torsdag') }}
          {% elif now().weekday() == 4 %}
            {{ states('sensor.storhagensforskola_lunch_fredag') }}  
          {% endif %}
        cache: false
        
        
- alias: Milla mat
  initial_state: 'on'
  trigger: 
    - platform: time
      at: "11:30:00"
    - platform: time
      at: "18:30:00"
  condition:
      - condition: time
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
  action:
    - service: media_player.volume_set
      entity_id:
      - media_player.hela_huset
      data:
        volume_level: 0.2
    - service: media_player.play_media
      data:
        entity_id:
          - media_player.hela_huset
        media_content_id: !secret content_silence_mp3
        media_content_type: music
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data:
       message: 'Notera! Kom ihåg att Milla ska ha mat snart!'
    - service: tts.google_say
      entity_id: media_player.kallare_mini
      data:
       message: 'Notera! Kom ihåg att Milla ska ha mat snart!'
    - service: notify.adults
      data:
        title: 'Milla'
        message: 'Kom ihåg att Milla ska ha mat snart!'
        

- alias: Dorrklockan 
  id: dorrklockan
  initial_state: 'on'
  trigger: 
    - platform: state
      entity_id: binary_sensor.dorrklockan
      to: 'off'
  action:
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data:
       message: 'Någon ringer på dörren!'
    - service: tts.google_say
      entity_id: media_player.kallare_mini
      data:
       message: 'Någon ringer på dörren!'
    - service: script.turn_on
      entity_id: script.dorrklockan_snapshot #Snapshot 1
    - delay: '00:00:02'
    - service: script.turn_on
      entity_id: script.dorrklockan_snapshot #Snapshot 2
      

- alias: Dorrklockan Halloween
  id: dorrklockan halloween
  initial_state: 'off'
  trigger: 
    - platform: state
      entity_id: binary_sensor.dorrklockan
      to: 'off'
  action:
    - service: switch.turn_off
      entity_id: switch.rest_julbelysning
    - service: light.turn_off
      entity_id: 
      - group.theus_rum
      - group.hallen
      - light.vardagsrum__trapp
    - service: media_player.volume_set
      entity_id:
      - media_player.entre_speaker
      data:
        volume_level: 0.8
    - service: media_player.play_media
      data:
        entity_id:
          - media_player.entre_speaker
        media_content_id: !secret content_halloween_mp3
        media_content_type: music
    - service: script.turn_on
      entity_id: script.dorrklockan_snapshot #Snapshot 1
    - delay: '00:00:02'
    - service: script.turn_on
      entity_id: script.dorrklockan_snapshot #Snapshot 2
    - service: script.turn_on
      entity_id: script.dorrklockan_snapshot #Snapshot 3
    - delay: '00:00:02'
    - service: script.turn_on
      entity_id: script.dorrklockan_snapshot #Snapshot 4
    - delay: '00:00:29'
    - service: light.turn_on
      entity_id:
      - group.theus_rum
      - group.hallen
      - light.vardagsrum__trapp
    - service: switch.turn_on
      entity_id: switch.rest_julbelysning


  ######################################
  ####    LÄXA ELLER NÅGOT [TTS]    ####
  ######################################     
- alias: Eves läxa
  initial_state: 'on'
  trigger: 
    - platform: time
      at: "06:40:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.devices_adults
        state: 'home'
      - condition: time
        weekday:
        - tue
  action:
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data:
       message: " PÅMINNELSE! Kom ihåg att ta med läxan idag!"

- alias: Eves bokinlämning
  initial_state: 'on'
  trigger: 
    - platform: time
      at: "06:40:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.devices_adults
        state: 'home'
      - condition: time
        weekday:
        - wed
  action:
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data:
       message: "PÅMINNELSE! Kom ihåg boken och simkläder!"
       
- alias: Eves gymnastik
  initial_state: 'on'
  trigger: 
    - platform: time
      at: "06:40:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.devices_adults
        state: 'home'
      - condition: time
        weekday:
        - fri
  action:
    - service: tts.google_say
      entity_id: media_player.entre_speaker
      data:
       message: "PÅMINNELSE! Kom ihåg gymnastikkläderna!"
       
# Backup locally
- alias: Backup Local
  initial_state: 'on'
  trigger:
  - platform: time
    at: "01:00:00"
  action:
  - service: hassio.snapshot_full
    data_template:
      name: Backup {{ now().strftime('%Y-%m-%d') }}

# Backup to Dropbox 
- alias: Backup Dropbox
  initial_state: 'on'
  trigger:
  - platform: time
    at: "02:00:00"
  action:
  - service: hassio.addon_stdin
    data_template:
      addon: "7be23ff5_dropbox_sync"
      input: {"command":"upload"}

# GÄSTLÄGE
- alias: 'guest mode'
  id: 'guest mode'
  initial_state: on
  trigger:
    platform: state
    entity_id: input_boolean.guest_mode
  condition: []
  action:
    service_template: >
        homeassistant.toggle_{{ 'off' if is_state('input_boolean.guest_mode', 'on') else 'on' }}
        entity_id: script.gast_mode_{{ states('input_boolean.guest_mode')}}
        
        
        
# KRISINFORMATION

- alias: 'Krisinformation Alert'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.krisinformation
    to: "Alert"
  action:
    - service: notify.adults
      data_template:
        message: >
          {{states.sensor.krisinformation_stockholm.attributes.messages[0].Headline}} - {{states.sensor.krisinformation_stockholm.attributes.messages[0].Message}} {{states.sensor.krisinformation_stockholm.attributes.messages[0].Web}}